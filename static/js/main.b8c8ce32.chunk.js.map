{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","window","setInterval","setState","console","log","toLocaleTimeString","clearInterval","clear","clockName","props","className","Component","getRandomName","value","Math","random","toString","slice","App","hasClock","handleDocumentClick","handleDocumentContextMenu","document","addEventListener","_","prevState","newState","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,KAAM,IAAIC,OAG1BM,QAAQC,IAAI,EAAKT,MAAMC,KAAKS,wBAC3B,OAbP,kCAgBE,WACEC,cAAcP,KAAKD,SAGnBK,QAAQI,UApBZ,oBAuBE,WACE,IAAQC,EAAcT,KAAKU,MAAnBD,UACAZ,EAASG,KAAKJ,MAAdC,KAER,OACE,sBAAKc,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGF,IAGF,YAED,sBAAME,UAAU,cAAhB,SACGd,EAAKS,8BApChB,GAA2BM,aCN3B,SAASC,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,GAQX,IAAMK,EAAb,4MACEvB,MAAQ,CACNwB,UAAU,EACVX,UAAWI,KAHf,EAqBEQ,oBAAsB,WACpB,EAAKlB,SAAS,CAAEiB,UAAU,KAtB9B,EAyBEE,0BAA4B,WAC1B,EAAKnB,SAAS,CAAEiB,UAAU,KA1B9B,uDAME,WAAqB,IAAD,OAClBnB,OAAOC,aAAY,WACjB,EAAKC,SAAS,CAAEM,UAAWI,QAC1B,MACHU,SAASC,iBAAiB,cAAexB,KAAKsB,2BAC9CC,SAASC,iBAAiB,QAASxB,KAAKqB,uBAX5C,gCAcE,SAAmBI,EAAiBC,GAClC,IAAMC,EAAW3B,KAAKJ,MAAMa,UAG5BL,QAAQC,IAAR,uBAA4BqB,EAAUjB,UAAtC,eAAsDkB,MAlB1D,oBA6BE,WACE,OACE,sBAAKhB,UAAU,MAAf,UACE,6CAECX,KAAKJ,MAAMwB,UAAY,cAAC,EAAD,CAAOX,UAAWT,KAAKJ,MAAMa,mBAlC7D,GAAyBG,aCZzBgB,IAASC,OACP,cAAC,EAAD,IACAN,SAASO,eAAe,W","file":"static/js/main.b8c8ce32.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  clockName: string;\n};\n\ntype State = {\n  date: Date;\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ date: new Date() });\n\n      // eslint-disable-next-line\n      console.log(this.state.date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n\n    // eslint-disable-next-line\n    console.clear();\n  }\n\n  render() {\n    const { clockName } = this.props;\n    const { date } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {date.toLocaleTimeString()}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: getRandomName(),\n  };\n\n  componentDidMount() {\n    window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n    document.addEventListener('contextmenu', this.handleDocumentContextMenu);\n    document.addEventListener('click', this.handleDocumentClick);\n  }\n\n  componentDidUpdate(_: Readonly<{}>, prevState: Readonly<State>) {\n    const newState = this.state.clockName;\n\n    // eslint-disable-next-line\n    console.log(`Renamed from ${prevState.clockName} to ${newState}`);\n  }\n\n  handleDocumentClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  handleDocumentContextMenu = () => {\n    this.setState({ hasClock: false });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {this.state.hasClock && <Clock clockName={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}